inherit_from: .rubocop_todo.yml
require:
 - test_prof/rubocop
 - rubocop-performance
 - rubocop-rails
 - rubocop-rspec
RSpec/AggregateExamples:
  AddAggregateFailuresMetadata: false
# Added exclude because api and feature specs do not have a specific class.
RSpec/DescribeClass:
  Exclude:
    - 'spec/requests/**/*.rb'
    - 'spec/api/**/*.rb'
    - 'spec/features/**/*.rb'
    - 'spec/lib/warren/*.rb'
    - 'spec/models/billing/*.rb'
AllCops:
  Exclude:
    - db/schema.rb
    - db/views_schema.rb
    - db/archived_migrations/*
    # CI installs gems in the vendor directory, which causes rubocop to try
    # and cop our gems. We don't want it to.
    - vendor/**/*
    - bin/*
    - sbin/*
    - node_modules/**/*

Rails/SkipsModelValidations:
  Exclude:
    - 'db/migrate/*.rb'
    - 'db/migrate_asset_refactor/*.rb'
    - 'features/support/step_definitions/*.rb'

Style/Documentation:
  Exclude:
    - 'test/**/*'
    - 'spec/**/*'

Rails:
  Enabled: true
# Step definitions are defined with Given /regex/ do ...
# There is little ambiguity here, and brackets just break convention
Lint/AmbiguousRegexpLiteral:
  Exclude:
    - features/support/step_definitions/**/*
# These steps are explicitly designed for debugging. In general usage, they wont
# be used.
Lint/Debugger:
  Exclude:
    - 'features/support/step_definitions/debug_steps.rb'
    - 'features/support/developing.rb'
# Enforces 1234565789 as 123_456_789: While nice when dealing with actual big
# numbers, we're more likely to see it shout at us about barcodes.
Style/NumericLiterals:
  Enabled: false

# Blocks are used to structure tests and are part of the shoulda dsl.
# The standard BlockLength limits are too stringent for this purpose.
# Block DSL is also used in routes
# We should be careful keeping rake tasks here, as large tasks are still an issue.
# Not sure if we need to split namespaces across several files though.
# We exclude builders, as they are concerned with rendering xml
Metrics/BlockLength:
  Exclude:
    - Gemfile
    - 'db/seeds/**/*'
    - '**/*.builder'
  IgnoredMethods:
    - describe
    - context
    - background
    - scenario
    - namespace
    - task
    - included
    - shared_context
    - shared_examples
    - state_machine
    - configure
    - draw
    - feature
    - subject
    - let
    - let!
    - factory
    - define
    - guard
    - transient
    - with_nested_has_many_association
    - with_association
    - it
    - class_eval
    - has_metadata
    - resources
    - aasm
# We have a few custom find_by methods which we maintain.
# At least for now. find_by_id_or_name is a bit clunky.
Rails/DynamicFindBy:
  Exclude:
    - 'app/sample_manifest_excel/**/*'
    - 'test/app/sample_manifest_excel/**/*'
  Whitelist:
    - find_by_sql
    - find_by_id_or_name
    - find_by_id_or_name!
    - find_by_barcode
    - find_by_or_null
# Method length limits make little sense when you are describing a table schema
# or a view.
Metrics/MethodLength:
  Exclude:
    - 'db/migrate/*'
    - 'db/migrate_asset_refactor/*'
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent
Style/ClassAndModuleChildren:
  Enabled: false
# This should be the rubocop defaults, not sure why its kicking up a fuss.
Layout/SpaceBeforeBlockBraces:
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: space
Rails/UnknownEnv:
  Environments:
    - production
    - development
    - test
    - cucumber
    - profile
RSpec/ExampleLength:
  inherit_mode:
    merge:
      - Exclude
  # Disable for features, as we might want to step through long processes
  Exclude:
    - 'spec/features/**/*'

# Pending Cops
Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true
Style/NilLambda: # (new in 1.3)
  Enabled: true
Style/RedundantArgument: # (new in 1.4)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true
Performance/AncestorsInclude: # (new in 1.7)
  Enabled: true
Performance/BigDecimalWithNumericArgument: # (new in 1.7)
  Enabled: true
Performance/RedundantSortBlock: # (new in 1.7)
  Enabled: true
Performance/RedundantStringChars: # (new in 1.7)
  Enabled: true
Performance/ReverseFirst: # (new in 1.7)
  Enabled: true
Performance/SortReverse: # (new in 1.7)
  Enabled: true
Performance/Squeeze: # (new in 1.7)
  Enabled: true
Performance/StringInclude: # (new in 1.7)
  Enabled: true
Rails/ActiveRecordCallbacksOrder: # (new in 2.7)
  Enabled: true
Rails/FindById: # (new in 2.7)
  Enabled: true
Rails/Inquiry: # (new in 2.7)
  Enabled: true
Rails/MailerName: # (new in 2.7)
  Enabled: true
Rails/MatchRoute: # (new in 2.7)
  Enabled: true
Rails/NegateInclude: # (new in 2.7)
  Enabled: true
Rails/Pluck: # (new in 2.7)
  Enabled: true
Rails/PluckInWhere: # (new in 2.7)
  Enabled: true
Rails/RenderInline: # (new in 2.7)
  Enabled: true
Rails/RenderPlainText: # (new in 2.7)
  Enabled: true
Rails/ShortI18n: # (new in 2.7)
  Enabled: true
Rails/WhereExists: # (new in 2.7)
  Enabled: true
Performance/BlockGivenWithExplicitBlock: # (new in 1.9)
  Enabled: true
Performance/CollectionLiteralInLoop: # (new in 1.8)
  Enabled: true
Performance/ConstantRegexp: # (new in 1.9)
  Enabled: true
Performance/MethodObjectAsBlock: # (new in 1.9)
  Enabled: true
Performance/Sum: # (new in 1.8)
  Enabled: true
Rails/AfterCommitOverride: # (new in 2.8)
  Enabled: true
Rails/AttributeDefaultBlockValue: # (new in 2.9)
  Enabled: true
Rails/SquishedSQLHeredocs: # (new in 2.8)
  Enabled: true
Rails/WhereEquals: # (new in 2.9)
  Enabled: true
Rails/WhereNot: # (new in 2.8)
  Enabled: true
